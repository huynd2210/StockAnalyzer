class TickerInformation:
    def __init__(self, ticker):
        self.address1 = ticker.get('address1')
        self.city = ticker.get('city')
        self.state = ticker.get('state')
        self.zip = ticker.get('zip')
        self.country = ticker.get('country')
        self.phone = ticker.get('phone')
        self.website = ticker.get('website')
        self.industry = ticker.get('industry')
        self.industryKey = ticker.get('industryKey')
        self.industryDisp = ticker.get('industryDisp')
        self.sector = ticker.get('sector')
        self.sectorKey = ticker.get('sectorKey')
        self.sectorDisp = ticker.get('sectorDisp')
        self.longBusinessSummary = ticker.get('longBusinessSummary')
        self.fullTimeEmployees = ticker.get('fullTimeEmployees')
        self.companyOfficers = ticker.get('companyOfficers')
        self.auditRisk = ticker.get('auditRisk')
        self.boardRisk = ticker.get('boardRisk')
        self.compensationRisk = ticker.get('compensationRisk')
        self.shareHolderRightsRisk = ticker.get('shareHolderRightsRisk')
        self.overallRisk = ticker.get('overallRisk')
        self.governanceEpochDate = ticker.get('governanceEpochDate')
        self.compensationAsOfEpochDate = ticker.get('compensationAsOfEpochDate')
        self.irWebsite = ticker.get('irWebsite')
        self.maxAge = ticker.get('maxAge')
        self.priceHint = ticker.get('priceHint')
        self.previousClose = ticker.get('previousClose')
        self.open = ticker.get('open')
        self.dayLow = ticker.get('dayLow')
        self.dayHigh = ticker.get('dayHigh')
        self.regularMarketPreviousClose = ticker.get('regularMarketPreviousClose')
        self.regularMarketOpen = ticker.get('regularMarketOpen')
        self.regularMarketDayLow = ticker.get('regularMarketDayLow')
        self.regularMarketDayHigh = ticker.get('regularMarketDayHigh')
        self.dividendRate = ticker.get('dividendRate')
        self.dividendYield = ticker.get('dividendYield')
        self.exDividendDate = ticker.get('exDividendDate')
        self.payoutRatio = ticker.get('payoutRatio')
        self.fiveYearAvgDividendYield = ticker.get('fiveYearAvgDividendYield')
        self.beta = ticker.get('beta')
        self.trailingPE = ticker.get('trailingPE')
        self.forwardPE = ticker.get('forwardPE')
        self.volume = ticker.get('volume')
        self.regularMarketVolume = ticker.get('regularMarketVolume')
        self.averageVolume = ticker.get('averageVolume')
        self.averageVolume10days = ticker.get('averageVolume10days')
        self.averageDailyVolume10Day = ticker.get('averageDailyVolume10Day')
        self.bid = ticker.get('bid')
        self.ask = ticker.get('ask')
        self.bidSize = ticker.get('bidSize')
        self.askSize = ticker.get('askSize')
        self.marketCap = ticker.get('marketCap')
        self.fiftyTwoWeekLow = ticker.get('fiftyTwoWeekLow')
        self.fiftyTwoWeekHigh = ticker.get('fiftyTwoWeekHigh')
        self.priceToSalesTrailing12Months = ticker.get('priceToSalesTrailing12Months')
        self.fiftyDayAverage = ticker.get('fiftyDayAverage')
        self.twoHundredDayAverage = ticker.get('twoHundredDayAverage')
        self.trailingAnnualDividendRate = ticker.get('trailingAnnualDividendRate')
        self.trailingAnnualDividendYield = ticker.get('trailingAnnualDividendYield')
        self.currency = ticker.get('currency')
        self.enterpriseValue = ticker.get('enterpriseValue')
        self.profitMargins = ticker.get('profitMargins')
        self.floatShares = ticker.get('floatShares')
        self.sharesOutstanding = ticker.get('sharesOutstanding')
        self.sharesShort = ticker.get('sharesShort')
        self.sharesShortPriorMonth = ticker.get('sharesShortPriorMonth')
        self.sharesShortPreviousMonthDate = ticker.get('sharesShortPreviousMonthDate')
        self.dateShortInterest = ticker.get('dateShortInterest')
        self.sharesPercentSharesOut = ticker.get('sharesPercentSharesOut')
        self.heldPercentInsiders = ticker.get('heldPercentInsiders')
        self.heldPercentInstitutions = ticker.get('heldPercentInstitutions')
        self.shortRatio = ticker.get('shortRatio')
        self.shortPercentOfFloat = ticker.get('shortPercentOfFloat')
        self.impliedSharesOutstanding = ticker.get('impliedSharesOutstanding')
        self.bookValue = ticker.get('bookValue')
        self.priceToBook = ticker.get('priceToBook')
        self.lastFiscalYearEnd = ticker.get('lastFiscalYearEnd')
        self.nextFiscalYearEnd = ticker.get('nextFiscalYearEnd')
        self.mostRecentQuarter = ticker.get('mostRecentQuarter')
        self.earningsQuarterlyGrowth = ticker.get('earningsQuarterlyGrowth')
        self.netIncomeToCommon = ticker.get('netIncomeToCommon')
        self.trailingEps = ticker.get('trailingEps')
        self.forwardEps = ticker.get('forwardEps')
        self.pegRatio = ticker.get('pegRatio')
        self.lastSplitFactor = ticker.get('lastSplitFactor')
        self.lastSplitDate = ticker.get('lastSplitDate')
        self.enterpriseToRevenue = ticker.get('enterpriseToRevenue')
        self.enterpriseToEbitda = ticker.get('enterpriseToEbitda')
        self.fiftyTwoWeekChange = ticker.get('fiftyTwoWeekChange')
        self.SandP52WeekChange = ticker.get('SandP52WeekChange')
        self.lastDividendValue = ticker.get('lastDividendValue')
        self.lastDividendDate = ticker.get('lastDividendDate')
        self.exchange = ticker.get('exchange')
        self.quoteType = ticker.get('quoteType')
        self.symbol = ticker.get('symbol')
        self.underlyingSymbol = ticker.get('underlyingSymbol')
        self.shortName = ticker.get('shortName')
        self.longName = ticker.get('longName')
        self.firstTradeDateEpochUtc = ticker.get('firstTradeDateEpochUtc')
        self.timeZoneFullName = ticker.get('timeZoneFullName')
        self.timeZoneShortName = ticker.get('timeZoneShortName')
        self.uuid = ticker.get('uuid')
        self.messageBoardId = ticker.get('messageBoardId')
        self.gmtOffSetMilliseconds = ticker.get('gmtOffSetMilliseconds')
        self.currentPrice = ticker.get('currentPrice')
        self.targetHighPrice = ticker.get('targetHighPrice')
        self.targetLowPrice = ticker.get('targetLowPrice')
        self.targetMeanPrice = ticker.get('targetMeanPrice')
        self.targetMedianPrice = ticker.get('targetMedianPrice')
        self.recommendationMean = ticker.get('recommendationMean')
        self.recommendationKey = ticker.get('recommendationKey')
        self.numberOfAnalystOpinions = ticker.get('numberOfAnalystOpinions')
        self.totalCash = ticker.get('totalCash')
        self.totalCashPerShare = ticker.get('totalCashPerShare')
        self.ebitda = ticker.get('ebitda')
        self.totalDebt = ticker.get('totalDebt')
        self.quickRatio = ticker.get('quickRatio')
        self.currentRatio = ticker.get('currentRatio')
        self.totalRevenue = ticker.get('totalRevenue')
        self.debtToEquity = ticker.get('debtToEquity')
        self.revenuePerShare = ticker.get('revenuePerShare')
        self.returnOnAssets = ticker.get('returnOnAssets')
        self.returnOnEquity = ticker.get('returnOnEquity')
        self.freeCashflow = ticker.get('freeCashflow')
        self.operatingCashflow = ticker.get('operatingCashflow')
        self.earningsGrowth = ticker.get('earningsGrowth')
        self.revenueGrowth = ticker.get('revenueGrowth')
        self.grossMargins = ticker.get('grossMargins')
        self.ebitdaMargins = ticker.get('ebitdaMargins')
        self.operatingMargins = ticker.get('operatingMargins')
        self.financialCurrency = ticker.get('financialCurrency')
        self.trailingPegRatio = ticker.get('trailingPegRatio')
